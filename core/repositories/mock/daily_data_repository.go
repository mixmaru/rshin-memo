// Code generated by MockGen. DO NOT EDIT.
// Source: core/repositories/daily_data_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/mixmaru/rshin-memo/core/entities"
)

// MockDailyDataRepositoryInterface is a mock of DailyDataRepositoryInterface interface.
type MockDailyDataRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDailyDataRepositoryInterfaceMockRecorder
}

// MockDailyDataRepositoryInterfaceMockRecorder is the mock recorder for MockDailyDataRepositoryInterface.
type MockDailyDataRepositoryInterfaceMockRecorder struct {
	mock *MockDailyDataRepositoryInterface
}

// NewMockDailyDataRepositoryInterface creates a new mock instance.
func NewMockDailyDataRepositoryInterface(ctrl *gomock.Controller) *MockDailyDataRepositoryInterface {
	mock := &MockDailyDataRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockDailyDataRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDailyDataRepositoryInterface) EXPECT() *MockDailyDataRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDailyDataRepositoryInterface) Get() ([]*entities.DailyDataEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]*entities.DailyDataEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDailyDataRepositoryInterfaceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDailyDataRepositoryInterface)(nil).Get))
}

// Save mocks base method.
func (m *MockDailyDataRepositoryInterface) Save(entity *entities.DailyDataEntity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", entity)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockDailyDataRepositoryInterfaceMockRecorder) Save(entity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDailyDataRepositoryInterface)(nil).Save), entity)
}
